package com.packt.jdeveloper.cookbook.hr.components.model.view;

import com.packt.jdeveloper.cookbook.hr.components.model.view.common.Employees;
import com.packt.jdeveloper.cookbook.shared.bc.extensions.ExtViewObjectImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jun 05 18:16:18 EEST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeesImpl extends ExtViewObjectImpl implements Employees {
    private static final int SALES_DEPARTMENT_ID = 80;

    /**
     * This is the default constructor (do not remove).
     */
    public EmployeesImpl() {
    }

    /**
     * Recipe: Iterating a View object using a secondary RowSet iterator.
     * 
     * Adjusts all the employees commission by a certain percentage.
     *
     * @param commissionPctAdjustment, the commission percent adjustment
     */
    public void adjustCommission(Number commissionPctAdjustment) {
        // check for valid commission adjustment
        if (commissionPctAdjustment != null) {
            // create an employee secondary RowSet iterator
            RowSetIterator employees = this.createRowSetIterator(null);
            // reset the iterator
            employees.reset();
            // iterate the employees
            while (employees.hasNext()) {
                // get the employee
                EmployeesRowImpl employee = (EmployeesRowImpl)employees.next();
                // check for employee belonging to the sales department
                if (employee.getDepartmentId() != null &&
                    SALES_DEPARTMENT_ID == employee.getDepartmentId().intValue()) {
                    // calculate adjusted commission
                    Number commissionPct = employee.getCommissionPct();
                    Number adjustedCommissionPct =
                        (commissionPct != null) ? commissionPct.add(commissionPctAdjustment) : commissionPctAdjustment;
                    // set the employee's new commission
                    employee.setCommissionPct(adjustedCommissionPct);
                }
            }

            // done with the RowSet iterator
            employees.closeRowSetIterator();
        }
    }

}
